This is the structure: 
.
├── add_to_list.php
├── all_contents.txt
├── confirm_purchases.php
├── functions.php
├── generate_shopping_list.php
├── index.php
├── logout.php
├── menu.php
├── modify_db.php
├── process_confirm.php
├── register.php
├── registration.php
├── remove_from_list.php
├── shopping_lists.php
└── sum.sh

0 directories, 15 files
----- ./menu.php -----
<?php
session_start();
require('functions.php');
if (!isset($_SESSION["logged_in_user"])) {
    header("Location: index.php");
    exit();
}
$loggedInUser = $_SESSION["logged_in_user"];
?>

<!DOCTYPE html>
<html lang="sv">
<head>
    <title>Meny</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" crossorigin="anonymous" />
    <style>
        .card { margin-top: 40px; }
        .list-group-item { font-size: 1.1rem; }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h2 class="card-title text-center mb-4">Meny</h2>
                        <div class="alert alert-info text-center">Välkommen, <?php echo htmlspecialchars($loggedInUser); ?>!</div>
                        <ul class="list-group mb-3">
                            <li class="list-group-item"><a href="shopping_lists.php">Mina Inköpslistor</a></li>
                            <li class="list-group-item"><a href="modify_db.php">Modifiera Varudatabasen</a></li>
                            <li class="list-group-item"><a href="confirm_purchases.php">Bekräfta Inköp</a></li>
                            <li class="list-group-item"><a href="logout.php">Logga ut</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

----- ./shopping_lists.php -----
<?php
session_start();
require('functions.php');
if (!isset($_SESSION["logged_in_user"])) {
    header("Location: index.php");
    exit();
}

// Redirect to the main shopping list page since multiple lists are no longer supported
header("Location: index.php");
exit();
?>
<!DOCTYPE html>
<html lang="sv">
<head>
    <title>Mina Inköpslistor</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" crossorigin="anonymous" />
    <style>
        .list-group-item {
            position: relative;
        }
        .list-actions {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
        }
        .rename-form {
            display: none;
            margin-top: 10px;
        }
    </style>
</head>
<body>
<div class="container mt-5">
    <h2 class="mb-4">Mina Inköpslistor</h2>
    
    <?php if (isset($_SESSION['message'])): ?>
        <?php echo $_SESSION['message']; unset($_SESSION['message']); ?>
    <?php endif; ?>
    
    <div class="card mb-4">
        <div class="card-header">
            <h5>Mina listor</h5>
        </div>
        <div class="card-body">
            <?php if (empty($lists)): ?>
                <div class="alert alert-info">Du har inga inköpslistor än. Skapa en nedan!</div>
            <?php else: ?>
                <ul class="list-group">
                    <?php foreach ($lists as $list): ?>
                        <li class="list-group-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <span><?php echo htmlspecialchars($list['display_name']); ?></span>
                                <div>
                                    <form method="post" class="d-inline">
                                        <input type="hidden" name="select_list" value="<?php echo $list['list_id']; ?>">
                                        <button type="submit" class="btn btn-info btn-sm">Redigera lista</button>
                                    </form>
                                    <form method="post" class="d-inline">
                                        <input type="hidden" name="select_list_for_purchase" value="<?php echo $list['list_id']; ?>">
                                        <button type="submit" class="btn btn-success btn-sm">Handla från denna lista</button>
                                    </form>
                                    <button type="button" class="btn btn-secondary btn-sm toggle-rename" data-list-id="<?php echo $list['list_id']; ?>">Byt namn</button>
                                    <form method="post" class="d-inline" onsubmit="return confirm('Är du säker på att du vill ta bort denna lista?');">
                                        <input type="hidden" name="list_id" value="<?php echo $list['list_id']; ?>">
                                        <button type="submit" name="delete_list" class="btn btn-danger btn-sm">Ta bort</button>
                                    </form>
                                </div>
                            </div>
                            
                            <!-- Rename form (hidden by default) -->
                            <form method="post" class="rename-form" id="rename-form-<?php echo $list['list_id']; ?>">
                                <div class="input-group">
                                    <input type="hidden" name="list_id" value="<?php echo $list['list_id']; ?>">
                                    <input type="text" name="new_name" class="form-control" placeholder="Nytt namn" value="<?php echo htmlspecialchars($list['name'] ?? ''); ?>" required>
                                    <div class="input-group-append">
                                        <button type="submit" name="rename_list" class="btn btn-outline-primary">Spara</button>
                                        <button type="button" class="btn btn-outline-secondary cancel-rename" data-list-id="<?php echo $list['list_id']; ?>">Avbryt</button>
                                    </div>
                                </div>
                            </form>
                        </li>
                    <?php endforeach; ?>
                </ul>
            <?php endif; ?>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h5>Skapa ny lista</h5>
        </div>
        <div class="card-body">
            <form method="post">
                <div class="form-group">
                    <label for="new_list_name">Namn på ny inköpslista (valfritt)</label>
                    <input type="text" name="new_list_name" id="new_list_name" class="form-control" placeholder="Lämna tomt för autogenererat namn">
                </div>
                <button type="submit" class="btn btn-primary">Skapa ny lista</button>
            </form>
        </div>
    </div>
    
    <div class="mt-3">
        <a href="menu.php" class="btn btn-secondary">Tillbaka till Meny</a>
        <a href="logout.php" class="btn btn-warning float-right">Logga ut</a>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Toggle rename form visibility
    document.querySelectorAll('.toggle-rename').forEach(button => {
        button.addEventListener('click', function() {
            const listId = this.getAttribute('data-list-id');
            const form = document.getElementById('rename-form-' + listId);
            form.style.display = form.style.display === 'block' ? 'none' : 'block';
        });
    });
    
    // Cancel rename
    document.querySelectorAll('.cancel-rename').forEach(button => {
        button.addEventListener('click', function() {
            const listId = this.getAttribute('data-list-id');
            document.getElementById('rename-form-' + listId).style.display = 'none';
        });
    });
});
</script>
</body>
</html>


----- ./add_to_list.php -----
<?php
session_start();
require('functions.php');
if (!isset($_SESSION["logged_in_user"])) {
    header("Location: index.php");
    exit();
}
$user_id = $_SESSION["user_id"];

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $item_id = $_POST["item_id"];
    $list_id = $_SESSION["selected_list_id"] ?? null;
    if ($list_id) {
        $db = getDb();
        $stmt = $db->prepare("INSERT INTO shopping_list_items (list_id, item_id) VALUES (:list_id, :item_id) ON CONFLICT DO NOTHING");
        $stmt->execute(['list_id' => $list_id, 'item_id' => $item_id]);
        header("Location: generate_shopping_list.php?list_id=$list_id");
        exit();
    }
    header("Location: shopping_lists.php"); // No list selected
    exit();
}
?>

----- ./logout.php -----
<?php
session_start();
session_destroy();
header("Location: index.php");
exit();
?>

----- ./functions.php -----
<?php
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

function getDb() {
    static $db = null;
    if ($db === null) {
        $host = getenv('DB_HOST');
        $port = getenv('DB_PORT');
        $dbname = getenv('DB_NAME');
        $username = getenv('DB_USER');
        $password = getenv('DB_PASSWORD');
        $dsn = "pgsql:host={$host};port={$port};dbname={$dbname}";
        try {
            $db = new PDO($dsn, $username, $password);
            $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (PDOException $e) {
            die("Connection failed: " . $e->getMessage());
        }
    }
    return $db;
}

function selectPwd($username) {
    $db = getDb();
    $stmt = $db->prepare("SELECT password_hash FROM users WHERE username = :username");
    $stmt->execute(['username' => $username]);
    $row = $stmt->fetch(PDO::FETCH_ASSOC);
    return $row ? $row['password_hash'] : null;
}

function getUserId($username) {
    $db = getDb();
    $stmt = $db->prepare("SELECT user_id FROM users WHERE username = :username");
    $stmt->execute(['username' => $username]);
    return $stmt->fetchColumn();
}

/**
 * Calculate the average interval between purchases for an item
 * Returns an array with average interval and dates information
 */
function calculatePurchaseInterval($item_id) {
    $db = getDb();
    $stmt = $db->prepare("
        SELECT purchase_date 
        FROM purchases 
        WHERE item_id = :item_id 
        ORDER BY purchase_date ASC
    ");
    $stmt->execute(['item_id' => $item_id]);
    $dates = $stmt->fetchAll(PDO::FETCH_COLUMN);
    
    $total_intervals = 0;
    $count = 0;
    $intervals_detail = [];
    
    // If we have at least two purchases, calculate interval
    if (count($dates) >= 2) {
        for ($i = 1; $i < count($dates); $i++) {
            $prev_date = new DateTime($dates[$i-1]);
            $curr_date = new DateTime($dates[$i]);
            $interval_days = $prev_date->diff($curr_date)->days;
            
            $intervals_detail[] = $interval_days;
            $total_intervals += $interval_days;
            $count++;
        }
        
        $avg_interval = $count > 0 ? $total_intervals / $count : null;
        
        return [
            'avg_interval' => $avg_interval,
            'intervals' => $intervals_detail,
            'purchase_dates' => $dates,
            'purchase_count' => count($dates)
        ];
    }
    
    return [
        'avg_interval' => null,
        'intervals' => [],
        'purchase_dates' => $dates,
        'purchase_count' => count($dates)
    ];
}

function getSuggestedItems($user_id) {
    $db = getDb();
    $stmt = $db->prepare("
        SELECT i.item_id, i.item_name,
               MAX(p.purchase_date) AS last_purchase
        FROM items i
        LEFT JOIN purchases p ON i.item_id = p.item_id
        WHERE i.user_id = :user_id 
        AND i.discontinued = FALSE 
        AND i.purchased = FALSE
        GROUP BY i.item_id, i.item_name
        ORDER BY i.item_name
    ");
    $stmt->execute(['user_id' => $user_id]);
    $items = $stmt->fetchAll(PDO::FETCH_ASSOC);

    $suggested = [];
    $current_date = new DateTime();

    foreach ($items as $item) {
        $interval_data = calculatePurchaseInterval($item['item_id']);
        $avg_interval = $interval_data['avg_interval'];
        if ($item['last_purchase'] === null) {
            $item['reason'] = 'Aldrig köpt tidigare';
            $item['avg_interval'] = null;
            $item['interval_detail'] = '';
            $suggested[] = $item;
        } elseif ($avg_interval !== null) {
            $last_purchase = new DateTime($item['last_purchase']);
            $days_since_last = $current_date->diff($last_purchase)->days;
            $interval_str = implode(', ', $interval_data['intervals']);
            $dates_str = implode(', ', array_map(function($date) {
                return date('Y-m-d', strtotime($date));
            }, $interval_data['purchase_dates']));
            if ($days_since_last >= $avg_interval) {
                $item['days_since_last'] = $days_since_last;
                $item['avg_interval'] = round($avg_interval, 1);
                $item['reason'] = 'Beräknat förbrukningsintervall (' . round($avg_interval, 1) . ' dagar) har passerats';
                $item['interval_detail'] = "Inköpsdatum: $dates_str\nBeräknade intervall (dagar): $interval_str";
                $suggested[] = $item;
            }
        } elseif (count($interval_data['purchase_dates']) == 1) {
            $last_purchase = new DateTime($item['last_purchase']);
            $days_since_last = $current_date->diff($last_purchase)->days;
            if ($days_since_last >= 30) {
                $item['days_since_last'] = $days_since_last;
                $item['avg_interval'] = null;
                $item['reason'] = 'Köpt endast en gång för ' . $days_since_last . ' dagar sedan';
                $item['interval_detail'] = "Inköpsdatum: " . date('Y-m-d', strtotime($item['last_purchase']));
                $suggested[] = $item;
            }
        }
    }
    return $suggested;
}

function getShoppingListItems($user_id) {
    $db = getDb();
    $stmt = $db->prepare("
        SELECT item_id, item_name
        FROM items
        WHERE user_id = :user_id AND purchased = FALSE AND discontinued = FALSE
        ORDER BY item_name
    ");
    $stmt->execute(['user_id' => $user_id]);
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}

function getAvailableItems($user_id) {
    $db = getDb();
    $stmt = $db->prepare("
        SELECT item_id, item_name
        FROM items
        WHERE user_id = :user_id AND discontinued = FALSE AND purchased = FALSE
        ORDER BY item_name
    ");
    $stmt->execute(['user_id' => $user_id]);
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}

function addItemToDatabase($user_id, $item_name) {
    $db = getDb();
    $stmt = $db->prepare("
        INSERT INTO items (user_id, item_name)
        VALUES (:user_id, :item_name)
    ");
    return $stmt->execute([
        'user_id' => $user_id,
        'item_name' => $item_name
    ]);
}

function removeItemFromDatabase($user_id, $item_id) {
    $db = getDb();
    $stmt = $db->prepare("
        DELETE FROM items
        WHERE item_id = :item_id AND user_id = :user_id
    ");
    return $stmt->execute(['item_id' => $item_id, 'user_id' => $user_id]);
}

/**
 * Markera en produkt som utgången (discontinued)
 */
function markItemAsDiscontinued($user_id, $item_id) {
    $db = getDb();
    $stmt = $db->prepare("
        UPDATE items
        SET discontinued = TRUE
        WHERE item_id = :item_id AND user_id = :user_id
    ");
    return $stmt->execute(['item_id' => $item_id, 'user_id' => $user_id]);
}

/**
 * Återställ en produkt som var markerad som utgången
 */
function restoreDiscontinuedItem($user_id, $item_id) {
    $db = getDb();
    $stmt = $db->prepare("
        UPDATE items
        SET discontinued = FALSE
        WHERE item_id = :item_id AND user_id = :user_id
    ");
    return $stmt->execute(['item_id' => $item_id, 'user_id' => $user_id]);
}

function getAllItemsForUser($user_id) {
    $db = getDb();
    $stmt = $db->prepare("
        SELECT i.item_id, i.item_name, i.discontinued,
               MAX(p.purchase_date) AS last_purchase,
               COUNT(p.purchase_id) AS purchase_count
        FROM items i
        LEFT JOIN purchases p ON i.item_id = p.item_id
        WHERE i.user_id = :user_id
        GROUP BY i.item_id, i.item_name, i.discontinued
        ORDER BY i.item_name
    ");
    $stmt->execute(['user_id' => $user_id]);
    $items = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    // Calculate average intervals for all items
    foreach ($items as &$item) {
        $interval_data = calculatePurchaseInterval($item['item_id']);
        $item['avg_interval'] = $interval_data['avg_interval'] ? round($interval_data['avg_interval'], 1) : null;
        $item['purchase_dates'] = $interval_data['purchase_dates'];
        $item['intervals'] = $interval_data['intervals'];
    }
    
    return $items;
}

/**
 * Hämta enskild vara baserat på ID
 */
function getItemById($user_id, $item_id) {
    $db = getDb();
    $stmt = $db->prepare("
        SELECT i.item_id, i.item_name, i.discontinued,
               MAX(p.purchase_date) AS last_purchase,
               COUNT(p.purchase_id) AS purchase_count
        FROM items i
        LEFT JOIN purchases p ON i.item_id = p.item_id
        WHERE i.user_id = :user_id AND i.item_id = :item_id
        GROUP BY i.item_id, i.item_name, i.discontinued
    ");
    $stmt->execute(['user_id' => $user_id, 'item_id' => $item_id]);
    return $stmt->fetch(PDO::FETCH_ASSOC);
}

function recordPurchase($item_id) {
    $db = getDb();
    $stmt = $db->prepare("
        INSERT INTO purchases (item_id, purchase_date)
        VALUES (:item_id, CURRENT_DATE)
    ");
    return $stmt->execute(['item_id' => $item_id]);
}

function markItemAsPurchased($user_id, $item_id) {
    $db = getDb();
    $stmt = $db->prepare("
        UPDATE items
        SET purchased = TRUE
        WHERE item_id = :item_id AND user_id = :user_id
    ");
    return $stmt->execute(['item_id' => $item_id, 'user_id' => $user_id]);
}

function addReplacement($user_id, $original_item_id, $replacement_item_id) {
    $db = getDb();
    $stmt = $db->prepare("
        INSERT INTO replacements (user_id, original_item_id, replacement_item_id)
        VALUES (:user_id, :original_item_id, :replacement_item_id)
    ");
    return $stmt->execute([
        'user_id' => $user_id,
        'original_item_id' => $original_item_id,
        'replacement_item_id' => $replacement_item_id
    ]);
}

function getReplacementsForUser($user_id) {
    $db = getDb();
    $stmt = $db->prepare("
        SELECT r.*, i1.item_name AS original_name, i2.item_name AS replacement_name
        FROM replacements r
        JOIN items i1 ON r.original_item_id = i1.item_id
        JOIN items i2 ON r.replacement_item_id = i2.item_id
        WHERE r.user_id = :user_id
        ORDER BY r.replaced_on DESC
    ");
    $stmt->execute(['user_id' => $user_id]);
    return $stmt->fetchAll(PDO::FETCH_ASSOC);
}
?>

----- ./confirm_purchases.php -----
<?php
session_start();
require('functions.php');
if (!isset($_SESSION["logged_in_user"])) {
    header("Location: index.php");
    exit();
}
$user_id = $_SESSION["user_id"];

// Hantera AJAX-förfrågan för att spara checked state
if (isset($_POST['ajax']) && $_POST['ajax'] === 'save_checked') {
    $_SESSION['checked_items'] = isset($_POST['checked']) ? $_POST['checked'] : [];
    echo json_encode(['status' => 'ok']);
    exit();
}

// AJAX: markera som utgången
if (isset($_POST['ajax']) && $_POST['ajax'] === 'discontinue_item') {
    $item_id = (int)$_POST['item_id'];
    markItemAsDiscontinued($user_id, $item_id);
    // Ta bort från sessionens shopping_list
    if (isset($_SESSION['shopping_list'])) {
        $_SESSION['shopping_list'] = array_values(array_diff($_SESSION['shopping_list'], [$item_id]));
    }
    echo json_encode(['status' => 'ok']);
    exit();
}

// AJAX: ersätt vara
if (isset($_POST['ajax']) && $_POST['ajax'] === 'replace_item') {
    $original_id = (int)$_POST['original_id'];
    $replacement_id = (int)$_POST['replacement_id'];
    // Registrera båda som köpta
    recordPurchase($original_id);
    recordPurchase($replacement_id);
    markItemAsPurchased($user_id, $original_id);
    markItemAsPurchased($user_id, $replacement_id);
    // Spara ersättningsrelation
    addReplacement($user_id, $original_id, $replacement_id);
    echo json_encode(['status' => 'ok']);
    exit();
}

// PHP: AJAX för ersättning med ny vara (med köpt)
if (isset($_POST['ajax']) && $_POST['ajax'] === 'replace_item_text') {
    $original_id = (int)$_POST['original_id'];
    $replacement_name = trim($_POST['replacement_name']);
    $replacement_purchased = isset($_POST['replacement_purchased']) && $_POST['replacement_purchased'] === '1';
    if ($replacement_name !== '') {
        // Skapa ny vara om den inte finns
        $all_items = getAllItemsForUser($user_id);
        $exists = false;
        foreach ($all_items as $item) {
            if (strcasecmp($item['item_name'], $replacement_name) === 0) {
                $exists = $item['item_id'];
                break;
            }
        }
        if (!$exists) {
            addItemToDatabase($user_id, $replacement_name);
            $all_items = getAllItemsForUser($user_id);
            foreach ($all_items as $item) {
                if (strcasecmp($item['item_name'], $replacement_name) === 0) {
                    $exists = $item['item_id'];
                    break;
                }
            }
        }
        if ($exists) {
            recordPurchase($original_id);
            markItemAsPurchased($user_id, $original_id);
            // Ta bort original från sessionens shopping_list
            if (isset($_SESSION['shopping_list'])) {
                $_SESSION['shopping_list'] = array_values(array_diff($_SESSION['shopping_list'], [$original_id]));
            }
            if ($replacement_purchased) {
                recordPurchase($exists);
                markItemAsPurchased($user_id, $exists);
            }
            addReplacement($user_id, $original_id, $exists);
        }
    }
    echo json_encode(['status' => 'ok']);
    exit();
}

// Hämta användarens inköpslista (alla aktiva varor)
$shopping_list = getShoppingListItems($user_id);
$checked_items = isset($_SESSION['checked_items']) ? $_SESSION['checked_items'] : [];

if ($_SERVER["REQUEST_METHOD"] == "POST" && !isset($_POST['ajax'])) {
    if (isset($_POST['purchased']) && is_array($_POST['purchased'])) {
        foreach ($_POST['purchased'] as $item_id) {
            recordPurchase($item_id);
            markItemAsPurchased($user_id, $item_id);
            // Ta bort från sessionens shopping_list
            if (isset($_SESSION['shopping_list'])) {
                $_SESSION['shopping_list'] = array_values(array_diff($_SESSION['shopping_list'], [$item_id]));
            }
        }
        $successMessage = "Dina inköp har registrerats!";
        unset($_SESSION['checked_items']); // Töm sessionen efter bekräftelse
        $shopping_list = getShoppingListItems($user_id);
        $checked_items = [];
    }
    // Hantera utgångna varor
    if (isset($_POST['discontinued']) && is_array($_POST['discontinued'])) {
        foreach ($_POST['discontinued'] as $item_id) {
            markItemAsDiscontinued($user_id, $item_id);
            // Ta bort från sessionens shopping_list
            if (isset($_SESSION['shopping_list'])) {
                $_SESSION['shopping_list'] = array_values(array_diff($_SESSION['shopping_list'], [$item_id]));
            }
        }
    }
    // Hantera impulsköp
    if (!empty($_POST['impulse_buys'])) {
        $impulse_buys = array_map('trim', explode(',', $_POST['impulse_buys']));
        foreach ($impulse_buys as $item_name) {
            if (empty($item_name)) continue;
            // Lägg till varan om den inte finns
            $all_items = getAllItemsForUser($user_id);
            $exists = false;
            foreach ($all_items as $item) {
                if (strcasecmp($item['item_name'], $item_name) === 0) {
                    $exists = $item['item_id'];
                    break;
                }
            }
            if (!$exists) {
                addItemToDatabase($user_id, $item_name);
                // Hämta id på nya varan
                $all_items = getAllItemsForUser($user_id);
                foreach ($all_items as $item) {
                    if (strcasecmp($item['item_name'], $item_name) === 0) {
                        $exists = $item['item_id'];
                        break;
                    }
                }
            }
            if ($exists) {
                recordPurchase($exists);
            }
        }
        $successMessage = "Dina inköp har registrerats!";
    }
    // Hämta uppdaterad lista
    $shopping_list = getShoppingListItems($user_id);
}
?>
<!DOCTYPE html>
<html lang="sv">
<head>
    <title>Bekräfta Inköp</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" crossorigin="anonymous" />
    <style>
        .card { margin-top: 40px; }
        .list-group-item { display: flex; align-items: center; }
        .form-check-input { margin-right: 10px; }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <h2 class="card-title text-center mb-4">Bekräfta Inköp</h2>
                        <?php if (isset($successMessage)): ?>
                            <div class="alert alert-success text-center"><?php echo $successMessage; ?></div>
                        <?php endif; ?>
                        <?php if (empty($shopping_list)): ?>
                            <div class="alert alert-info text-center" role="alert">
                                Din inköpslista är tom. <a href="index.php" class="alert-link">Lägg till varor i inköpslistan</a> först.
                            </div>
                        <?php else: ?>
                            <form method="post" id="purchase-form">
                                <div class="mb-4">
                                    <h5>Markera varor som du har köpt:</h5>
                                    <ul class="list-group mb-3" id="shopping-list">
                                        <?php $all_items = getAllItemsForUser($user_id); ?>
                                        <?php foreach ($shopping_list as $item): ?>
                                            <li class="list-group-item flex-column align-items-start" data-item-id="<?php echo $item['item_id']; ?>" style="padding-bottom: 0.5rem;">
                                                <div class="d-flex align-items-center w-100">
                                                    <div class="form-check mr-3">
                                                        <input class="form-check-input purchase-checkbox" type="checkbox" name="purchased[]" value="<?php echo $item['item_id']; ?>" id="item-<?php echo $item['item_id']; ?>" <?php echo in_array($item['item_id'], $checked_items) ? 'checked' : ''; ?>>
                                                        <label class="form-check-label" for="item-<?php echo $item['item_id']; ?>">
                                                            <?php echo htmlspecialchars($item['item_name']); ?>
                                                        </label>
                                                    </div>
                                                    <button type="button" class="btn btn-warning btn-sm ml-2 discontinue-btn">Markera som utgången</button>
                                                    <button type="button" class="btn btn-info btn-sm ml-2 replace-btn">Ersätt med ny vara…</button>
                                                </div>
                                                <div class="replace-form mt-3 p-3 bg-light border rounded" style="display:none;">
                                                    <form class="form-inline flex-wrap">
                                                        <div class="form-group mb-2 mr-2 w-100" style="max-width: 350px;">
                                                            <input type="text" class="form-control form-control-sm w-100 replacement-input" placeholder="Namn på ny vara">
                                                        </div>
                                                        <div class="form-group mb-2 mr-2">
                                                            <div class="form-check">
                                                                <input class="form-check-input replacement-purchased" type="checkbox" id="replacement-purchased-<?php echo $item['item_id']; ?>">
                                                                <label class="form-check-label" for="replacement-purchased-<?php echo $item['item_id']; ?>">Markera som köpt</label>
                                                            </div>
                                                        </div>
                                                        <button type="button" class="btn btn-success btn-sm mb-2 confirm-replace">Bekräfta</button>
                                                        <button type="button" class="btn btn-secondary btn-sm mb-2 ml-1 cancel-replace">Avbryt</button>
                                                    </form>
                                                </div>
                                            </li>
                                        <?php endforeach; ?>
                                    </ul>
                                </div>
                                <div class="form-group">
                                    <h5>Impulsköp (varor som inte fanns på listan):</h5>
                                    <input type="text" name="impulse_buys" class="form-control" placeholder="Ange kommaseparerade varor, t.ex. Choklad, Tidning, Batterier">
                                    <small class="form-text text-muted">Dessa varor kommer att läggas till i din varudatabas om de inte redan finns där.</small>
                                </div>
                                <div class="form-group text-center">
                                    <button type="submit" class="btn btn-success btn-lg">Bekräfta inköp</button>
                                </div>
                            </form>
                        <?php endif; ?>
                        <hr class="mt-4 mb-3">
                        <div class="text-center">
                            <a href="index.php" class="btn btn-info">Redigera inköpslista</a>
                            <a href="menu.php" class="btn btn-secondary">Tillbaka till menyn</a>
                            <a href="logout.php" class="btn btn-warning">Logga ut</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
    // Spara checked state i session via AJAX
    document.querySelectorAll('.purchase-checkbox').forEach(function(checkbox) {
        checkbox.addEventListener('change', function() {
            const checked = Array.from(document.querySelectorAll('.purchase-checkbox:checked')).map(cb => cb.value);
            const formData = new FormData();
            formData.append('ajax', 'save_checked');
            checked.forEach(id => formData.append('checked[]', id));
            fetch('', { method: 'POST', body: formData });
        });
    });

    // Markera som utgången
    const list = document.getElementById('shopping-list');
    list && list.addEventListener('click', function(e) {
        if (e.target.classList.contains('discontinue-btn')) {
            const li = e.target.closest('li');
            const itemId = li.getAttribute('data-item-id');
            const formData = new FormData();
            formData.append('ajax', 'discontinue_item');
            formData.append('item_id', itemId);
            fetch('', { method: 'POST', body: formData })
                .then(() => { li.remove(); });
        }
        // Visa ersättningsformulär
        if (e.target.classList.contains('replace-btn')) {
            const li = e.target.closest('li');
            li.querySelector('.replace-form').style.display = 'block';
        }
        // Avbryt ersättning
        if (e.target.classList.contains('cancel-replace')) {
            e.preventDefault();
            const li = e.target.closest('li');
            li.querySelector('.replace-form').style.display = 'none';
        }
        // Bekräfta ersättning
        if (e.target.classList.contains('confirm-replace')) {
            e.preventDefault();
            const li = e.target.closest('li');
            const originalId = li.getAttribute('data-item-id');
            const input = li.querySelector('.replacement-input');
            const replacementName = input.value.trim();
            const purchased = li.querySelector('.replacement-purchased').checked ? '1' : '';
            if (!replacementName) return;
            const formData = new FormData();
            formData.append('ajax', 'replace_item_text');
            formData.append('original_id', originalId);
            formData.append('replacement_name', replacementName);
            formData.append('replacement_purchased', purchased);
            fetch('', { method: 'POST', body: formData })
                .then(() => { li.remove(); location.reload(); });
        }
    });
    </script>
</body>
</html>

----- ./index.php -----
<?php
session_start();
require('functions.php');
if (!isset($_SESSION["logged_in_user"])) {
    header("Location: index.php");
    exit();
}
$user_id = $_SESSION["user_id"];
$loggedInUser = $_SESSION["logged_in_user"];

// Hantera session för inköpslistan
if (!isset($_SESSION['shopping_list'])) {
    // Första gången: föreslå varor
    $suggested = getSuggestedItems($user_id);
    $_SESSION['shopping_list'] = array_map(function($item) { return $item['item_id']; }, $suggested);
}

// Hantera POST: lägg till/ta bort varor
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['add_item_id'])) {
        $add_id = (int)$_POST['add_item_id'];
        if (!in_array($add_id, $_SESSION['shopping_list'])) {
            $_SESSION['shopping_list'][] = $add_id;
        }
    }
    if (isset($_POST['remove_item_id'])) {
        $remove_id = (int)$_POST['remove_item_id'];
        $_SESSION['shopping_list'] = array_values(array_diff($_SESSION['shopping_list'], [$remove_id]));
    }
    if (isset($_POST['save_list'])) {
        header('Location: confirm_purchases.php');
        exit();
    }
}

// Hämta varor på listan
$list_items = [];
if (!empty($_SESSION['shopping_list'])) {
    foreach ($_SESSION['shopping_list'] as $item_id) {
        $item = getItemById($user_id, $item_id);
        if ($item && !$item['discontinued']) {
            $list_items[] = $item;
        }
    }
}

// Hämta tillgängliga varor att lägga till
$all_items = getAllItemsForUser($user_id);
$available_items = array_filter($all_items, function($item) {
    return !$item['discontinued'];
});
// Filtrera bort de som redan är på listan
$available_items = array_filter($available_items, function($item) {
    return !in_array($item['item_id'], $_SESSION['shopping_list']);
});
?>
<!DOCTYPE html>
<html lang="sv">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <title>Min Inköpslista</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" crossorigin="anonymous" />
    <style>
        .card { margin-top: 40px; }
        .list-group-item { font-size: 1.1rem; }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <h2 class="card-title text-center mb-4">Min Inköpslista</h2>
                        <div class="alert alert-info text-center">Välkommen, <?php echo htmlspecialchars($loggedInUser); ?>! <a href="logout.php" class="btn btn-sm btn-outline-secondary ml-2">Logga ut</a></div>
                        <form method="post" class="mb-3">
                            <div class="form-row align-items-end">
                                <div class="col-md-8">
                                    <label for="add_item_id">Lägg till vara från databasen:</label>
                                    <select class="form-control" name="add_item_id" id="add_item_id">
                                        <?php foreach ($available_items as $item): ?>
                                            <option value="<?php echo $item['item_id']; ?>"><?php echo htmlspecialchars($item['item_name']); ?></option>
                                        <?php endforeach; ?>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <button type="submit" class="btn btn-primary btn-block">Lägg till vara</button>
                                </div>
                            </div>
                        </form>
                        <h5>Varor på din inköpslista:</h5>
                        <?php if (empty($list_items)): ?>
                            <div class="alert alert-warning text-center">Din inköpslista är tom.</div>
                        <?php else: ?>
                            <ul class="list-group mb-3">
                                <?php foreach ($list_items as $item): ?>
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <?php echo htmlspecialchars($item['item_name']); ?>
                                        <form method="post" style="display:inline;">
                                            <input type="hidden" name="remove_item_id" value="<?php echo $item['item_id']; ?>">
                                            <button type="submit" class="btn btn-danger btn-sm">Ta bort</button>
                                        </form>
                                    </li>
                                <?php endforeach; ?>
                            </ul>
                        <?php endif; ?>
                        <form method="post">
                            <button type="submit" name="save_list" class="btn btn-success btn-lg btn-block">Spara inköpslista &amp; gå till bekräftelse</button>
                        </form>
                        <a href="modify_db.php" class="btn btn-secondary mt-3">Hantera varudatabasen</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

----- ./register.php -----
<?php
session_start();
require('functions.php');

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = trim($_POST["username"]);
    $password = $_POST["password"];
    $confirm = $_POST["confirm"];

    if ($password !== $confirm) {
        $_SESSION['message'] = "<p style='background-color:Tomato;'>Passwords do not match</p>";
        header("Location: registration.php");
        exit();
    }

    $db = getDb();
    $stmt = $db->prepare("SELECT user_id FROM users WHERE username = :username");
    $stmt->execute(['username' => $username]);
    if ($stmt->fetch()) {
        $_SESSION['message'] = "<p style='background-color:Tomato;'>Username already taken</p>";
        header("Location: registration.php");
        exit();
    }

    $password_hash = hash('sha3-512', $password);
    $stmt = $db->prepare("INSERT INTO users (username, password_hash) VALUES (:username, :password_hash)");
    $stmt->execute(['username' => $username, 'password_hash' => $password_hash]);
    $user_id = $db->lastInsertId();

    $_SESSION["logged_in_user"] = $username;
    $_SESSION["user_id"] = $user_id;
    session_regenerate_id(true); // Prevent session fixation
    header("Location: menu.php");
    exit();
}
?>

----- ./process_confirm.php -----
<?php
session_start();
require('functions.php');
if (!isset($_SESSION["logged_in_user"])) {
    header("Location: index.php");
    exit();
}
$user_id = $_SESSION["user_id"];

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $list_id = $_POST['list_id'] ?? null;
    if (!$list_id) {
        $_SESSION['error'] = "Ingen lista vald.";
        header("Location: shopping_lists.php");
        exit();
    }

    $db = getDb();
    $db->beginTransaction();
    
    try {
        if (isset($_POST['purchased']) && is_array($_POST['purchased'])) {
            foreach ($_POST['purchased'] as $list_item_id) {
                $stmt = $db->prepare("
                    SELECT item_id FROM shopping_list_items 
                    WHERE list_item_id = :list_item_id AND list_id = :list_id
                ");
                $stmt->execute(['list_item_id' => $list_item_id, 'list_id' => $list_id]);
                $item_id = $stmt->fetchColumn();
                
                if ($item_id) {
                    recordPurchase($item_id);
                    markItemAsPurchased($user_id, $list_item_id);
                }
            }
        }
        
        if (isset($_POST['impulse_buys']) && !empty($_POST['impulse_buys'])) {
            $impulse_buys = array_map('trim', explode(',', $_POST['impulse_buys']));
            foreach ($impulse_buys as $item_name) {
                if (empty($item_name)) continue;
                $stmt = $db->prepare("
                    SELECT item_id FROM items 
                    WHERE user_id = :user_id AND item_name ILIKE :item_name
                ");
                $stmt->execute(['user_id' => $user_id, 'item_name' => $item_name]);
                $item_id = $stmt->fetchColumn();
                
                if (!$item_id) {
                    $stmt = $db->prepare("
                        INSERT INTO items (user_id, item_name) 
                        VALUES (:user_id, :item_name) 
                        RETURNING item_id
                    ");
                    $stmt->execute(['user_id' => $user_id, 'item_name' => $item_name]);
                    $item_id = $stmt->fetchColumn();
                }
                recordPurchase($item_id);
            }
        }
        
        $db->commit();
        $_SESSION['message'] = "Dina inköp har registrerats!";
        header("Location: menu.php");
        exit();
    } catch (Exception $e) {
        $db->rollBack();
        $_SESSION['error'] = "Ett fel uppstod: " . $e->getMessage();
        header("Location: confirm_purchases.php?list_id=$list_id");
        exit();
    }
} else {
    header("Location: shopping_lists.php");
    exit();
}
?>

----- ./registration.php -----
<?php
session_start();
if (isset($_SESSION["logged_in_user"])) {
    header("Location: menu.php");
    exit();
}
?>

<!DOCTYPE html>
<html lang="sv">
<head>
    <title>Registrera dig</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" crossorigin="anonymous" />
    <link href="https://getbootstrap.com/docs/4.0/examples/signin/signin.css" rel="stylesheet" crossorigin="anonymous" />
    <style>
        .card { margin-top: 40px; }
        .btn { margin-top: 10px; }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="text-center mb-3">
                            <a href="index.php" class="btn btn-secondary btn-sm">Logga in</a>
                        </div>
                        <h2 class="card-title text-center mb-4">Registrera dig</h2>
                        <?php if (isset($_SESSION['message'])) { echo '<div class="alert alert-danger" role="alert">'.$_SESSION['message'].'</div>'; unset($_SESSION['message']); } ?>
                        <form method="post" action="register.php">
                            <div class="form-group">
                                <label for="username">Användarnamn</label>
                                <input type="text" id="username" name="username" class="form-control" placeholder="Användarnamn" required autofocus />
                            </div>
                            <div class="form-group">
                                <label for="password">Lösenord</label>
                                <input type="password" id="password" name="password" class="form-control" placeholder="Lösenord" required />
                            </div>
                            <div class="form-group">
                                <label for="confirm">Bekräfta lösenord</label>
                                <input type="password" id="confirm" name="confirm" class="form-control" placeholder="Bekräfta lösenord" required />
                            </div>
                            <button class="btn btn-outline-primary btn-block" type="submit">Registrera</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script type="module" src="../public/js/index.js"></script>
</body>
</html>

----- ./sum.sh -----
#!/usr/bin/env bash

OUTPUT_FILE="all_contents.txt"

# Remove old output file if it exists
[ -f "$OUTPUT_FILE" ] && rm "$OUTPUT_FILE"

echo "This is the structure: " >> "$OUTPUT_FILE"
tree . >> "$OUTPUT_FILE"

# Loop through all files, skipping .git and checking if they're text and readable
find . -type f -not -path '*/.git/*' | while read -r FILE; do
  if [ -r "$FILE" ] && file "$FILE" | grep -q text; then
    echo "----- $FILE -----" >> "$OUTPUT_FILE"
    cat "$FILE" >> "$OUTPUT_FILE"
    echo -e "\n" >> "$OUTPUT_FILE"
  fi
done

echo "All text contents have been written to $OUTPUT_FILE."

----- ./all_contents.txt -----


----- ./remove_from_list.php -----
<?php
session_start();
require('functions.php');
if (!isset($_SESSION["logged_in_user"])) {
    header("Location: index.php");
    exit();
}
$user_id = $_SESSION["user_id"];

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $list_item_id = $_POST["list_item_id"];
    $list_id = $_SESSION["selected_list_id"] ?? null;
    if ($list_id) {
        $db = getDb();
        $stmt = $db->prepare("
            DELETE FROM shopping_list_items 
            WHERE list_item_id = :list_item_id AND list_id = :list_id
        ");
        $stmt->execute(['list_item_id' => $list_item_id, 'list_id' => $list_id]);
        header("Location: generate_shopping_list.php?list_id=$list_id");
        exit();
    }
    header("Location: shopping_lists.php");
    exit();
}
?>

----- ./generate_shopping_list.php -----
<?php
session_start();
require('functions.php');
if (!isset($_SESSION["logged_in_user"])) {
    header("Location: index.php");
    exit();
}
$user_id = $_SESSION["user_id"];
$db = getDb();

// Hämta list-id från GET eller SESSION
$list_id = isset($_GET['list_id']) ? $_GET['list_id'] : (isset($_SESSION['selected_list_id']) ? $_SESSION['selected_list_id'] : null);
if (!$list_id) {
    // Redirect to shopping_lists.php if no list is selected, to allow user to pick or create one.
    header("Location: shopping_lists.php");
    exit();
}
$_SESSION['selected_list_id'] = $list_id; // Ensure selected_list_id is in session for consistency

// Hantera POST (lägg till/ta bort)
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['add_item']) && !empty($_POST['item_id'])) {
        $item_id = $_POST["item_id"];
        // Check if item is already in the list to prevent duplicates (optional, depends on desired behavior)
        $stmt_check = $db->prepare("SELECT COUNT(*) FROM shopping_list_items WHERE list_id = :list_id AND item_id = :item_id");
        $stmt_check->execute(['list_id' => $list_id, 'item_id' => $item_id]);
        if ($stmt_check->fetchColumn() == 0) {
            $stmt = $db->prepare("INSERT INTO shopping_list_items (list_id, item_id) VALUES (:list_id, :item_id)");
            $stmt->execute(['list_id' => $list_id, 'item_id' => $item_id]);
        }
        header("Location: generate_shopping_list.php?list_id=$list_id");
        exit();
    } elseif (isset($_POST['remove_item']) && !empty($_POST['list_item_id'])) {
        $list_item_id = $_POST["list_item_id"];
        $stmt = $db->prepare("DELETE FROM shopping_list_items WHERE list_item_id = :list_item_id AND list_id = :list_id"); // Added list_id for security
        $stmt->execute(['list_item_id' => $list_item_id, 'list_id' => $list_id]);
        header("Location: generate_shopping_list.php?list_id=$list_id");
        exit();
    } elseif (isset($_POST['save'])) {
        header("Location: menu.php"); // "Save" here means done editing, go to menu
        exit();
    }
}

// Hämta lista och items
$list = getShoppingListById($user_id, $list_id);
$list_items = $list ? $list['items'] : [];
$current_list_item_ids = array_column($list_items, 'item_id');

// Hämta föreslagna varor
$suggested_items_raw = getSuggestedItems($user_id, $list_id);
$suggestions_to_display = [];
foreach ($suggested_items_raw as $suggested_item) {
    if (!in_array($suggested_item['item_id'], $current_list_item_ids)) {
        $suggestions_to_display[] = $suggested_item;
    }
}

// Hämta tillgängliga varor för manuell tilläggning (inte redan i listan eller bland förslagen som visas)
$all_available_items = getAvailableItems($user_id, $list_id); // Gets items not in current list
$suggested_ids_to_display = array_column($suggestions_to_display, 'item_id');
$available_for_dropdown = [];
foreach ($all_available_items as $avail_item) {
    if (!in_array($avail_item['item_id'], $suggested_ids_to_display)) {
        $available_for_dropdown[] = $avail_item;
    }
}

$list_name_obj = $db->prepare("SELECT name, created_date FROM shopping_lists WHERE list_id = :list_id AND user_id = :user_id");
$list_name_obj->execute(['list_id' => $list_id, 'user_id' => $user_id]);
$list_info = $list_name_obj->fetch(PDO::FETCH_ASSOC);
$display_list_name = "";
if ($list_info) {
    $display_list_name = !empty($list_info['name']) ? htmlspecialchars($list_info['name']) : "Inköpslista skapad " . date('Y-m-d H:i', strtotime($list_info['created_date']));
}

?>

<!DOCTYPE html>
<html lang="sv">
<head>
    <title>Skapa Inköpslista - <?php echo $display_list_name; ?></title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" crossorigin="anonymous" />
    <style>
        .card { margin-top: 20px; }
        .alert { margin-top: 10px; }
        .btn { margin-right: 5px; margin-bottom: 5px; }
        .list-group-item { display: flex; justify-content: space-between; align-items: center; }
        .suggestions-card { margin-top: 30px; }
        .item-reason {
            font-size: 0.85rem;
            color: #6c757d;
            margin-top: 3px;
        }
        .suggestion-badge {
            background-color: #17a2b8;
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            font-size: 0.75rem;
            margin-right: 0.5rem;
        }
        .purchase-history {
            margin-top: 5px;
            font-size: 0.85rem;
            color: #6c757d;
            border-left: 3px solid #17a2b8;
            padding-left: 10px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2 class="mt-4">Din Inköpslista: <?php echo $display_list_name; ?></h2>

        <!-- Current List Items -->
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Nuvarande varor i listan</h5>
                <?php if (empty($list_items)): ?>
                    <div class="alert alert-info" role="alert">
                        Din lista är tom. Du kan lägga till varor från förslagen nedan eller manuellt.
                    </div>
                <?php else: ?>
                    <ul class="list-group mb-3">
                        <?php foreach ($list_items as $item): ?>
                            <li class="list-group-item">
                                <?php echo htmlspecialchars($item['item_name']); ?>
                                <form method="post" action="generate_shopping_list.php?list_id=<?php echo $list_id; ?>" style="display:inline;">
                                    <input type="hidden" name="list_item_id" value="<?php echo $item['list_item_id']; ?>">
                                    <button type="submit" name="remove_item" class="btn btn-danger btn-sm">Ta bort</button>
                                </form>
                            </li>
                        <?php endforeach; ?>
                    </ul>
                <?php endif; ?>
            </div>
        </div>

        <!-- Suggested Items -->
        <?php if (!empty($suggestions_to_display)): ?>
        <div class="card suggestions-card">
            <div class="card-body">
                <h5 class="card-title">Föreslagna varor</h5>
                <p class="card-text">Baserat på din inköpshistorik och automatiskt beräknade förbrukningsintervaller.</p>
                <ul class="list-group mb-3">
                    <?php foreach ($suggestions_to_display as $item): ?>
                        <li class="list-group-item">
                            <div>
                                <strong><?php echo htmlspecialchars($item['item_name']); ?></strong>
                                <?php if (isset($item['last_purchase']) && $item['last_purchase']): ?>
                                    <small class="text-muted">(Senast köpt: <?php echo date("Y-m-d", strtotime($item['last_purchase'])); ?>)</small>
                                <?php else: ?>
                                    <small class="text-muted">(Aldrig köpt)</small>
                                <?php endif; ?>
                                
                                <div class="item-reason mt-1">
                                    <?php if (isset($item['avg_interval'])): ?>
                                        <span class="badge badge-info">Beräknat förbrukningsintervall: <?php echo htmlspecialchars($item['avg_interval']); ?> dagar</span> <br>
                                    <?php endif; ?>
                                    <?php echo htmlspecialchars($item['reason']); ?>
                                    <?php if (isset($item['days_since_last'])): ?>
                                        <br>Det har gått <?php echo htmlspecialchars($item['days_since_last']); ?> dagar sedan senaste inköp
                                    <?php endif; ?>
                                </div>
                                
                                <?php if (isset($item['interval_detail']) && !empty($item['interval_detail'])): ?>
                                    <a href="#" class="toggle-history small" data-item-id="<?php echo $item['item_id']; ?>">Visa/dölj inköpsdetaljer</a>
                                    <div class="purchase-history" id="history-<?php echo $item['item_id']; ?>">
                                        <pre class="mb-0 small"><?php echo htmlspecialchars($item['interval_detail']); ?></pre>
                                    </div>
                                <?php endif; ?>
                            </div>
                            <form method="post" action="generate_shopping_list.php?list_id=<?php echo $list_id; ?>" style="margin-left: auto;">
                                <input type="hidden" name="item_id" value="<?php echo $item['item_id']; ?>">
                                <button type="submit" name="add_item" class="btn btn-info btn-sm">Lägg till i lista</button>
                            </form>
                        </li>
                    <?php endforeach; ?>
                </ul>
            </div>
        </div>
        <?php endif; ?>

        <!-- Manually Add Other Items -->
        <div class="card mt-4">
            <div class="card-body">
                <h5 class="card-title">Lägg till andra varor manuellt</h5>
                <?php if (empty($available_for_dropdown) && empty($suggestions_to_display) && empty($list_items) && !getAllItemsForUser($user_id)): // getAllItemsForUser would be a new function to check if there are any items at all for the user ?>
                     <div class="alert alert-warning" role="alert">
                        Det finns inga varor i din varudatabas. <a href="modify_db.php" class="alert-link">Lägg till varor i databasen först</a>.
                    </div>
                <?php elseif (!empty($available_for_dropdown)): ?>
                    <form method="post" action="generate_shopping_list.php?list_id=<?php echo $list_id; ?>" class="form-inline mb-3">
                        <select name="item_id" class="form-control mr-2">
                            <option value="">Välj vara...</option>
                            <?php foreach ($available_for_dropdown as $item): ?>
                                <option value="<?php echo $item['item_id']; ?>"><?php echo htmlspecialchars($item['item_name']); ?></option>
                            <?php endforeach; ?>
                        </select>
                        <button type="submit" name="add_item" class="btn btn-primary">Lägg till manuellt</button>
                    </form>
                <?php else: ?>
                     <div class="alert alert-info" role="alert">
                        Alla tillgängliga varor finns antingen i din lista eller bland förslagen. Du kan <a href="modify_db.php" class="alert-link">lägga till nya typer av varor</a> i din databas.
                    </div>
                <?php endif; ?>
            </div>
        </div>
        
        <hr class="mt-4 mb-3">
        <form method="post" action="generate_shopping_list.php?list_id=<?php echo $list_id; ?>" style="display:inline-block;">
            <button type="submit" name="save" class="btn btn-success">Klar med listan (Till Menyn)</button>
        </form>
        <a href="shopping_lists.php" class="btn btn-info">Byt/Skapa ny lista</a>
        <a href="menu.php" class="btn btn-secondary">Avbryt (Till Menyn)</a>
        <a href="logout.php" class="btn btn-warning float-right">Logga ut</a>

    </div>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Toggle purchase history visibility
        document.querySelectorAll('.toggle-history').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                const itemId = this.getAttribute('data-item-id');
                const history = document.getElementById('history-' + itemId);
                if (history) {
                    history.style.display = history.style.display === 'block' ? 'none' : 'block';
                }
            });
        });
    });
    </script>
</body>
</html>

----- ./modify_db.php -----
<?php
session_start();
require('functions.php');
if (!isset($_SESSION["logged_in_user"])) {
    header("Location: index.php");
    exit();
}
$user_id = $_SESSION["user_id"];
$db = getDb();

// Felmeddelande för validering
$errorMessage = '';
$successMessage = '';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    if (isset($_POST['add'])) {
        $item_name = trim($_POST["item_name"]);
        
        // Validera input
        if (empty($item_name)) {
            $errorMessage = "Varunamn kan inte vara tomt.";
        } else {
            // Lägg till vara i databasen
            if (addItemToDatabase($user_id, $item_name)) {
                $successMessage = "Varan har lagts till!";
            } else {
                $errorMessage = "Ett fel uppstod när varan skulle läggas till.";
            }
        }
    } elseif (isset($_POST['delete'])) {
        $item_id = $_POST["item_id"];
        if (removeItemFromDatabase($user_id, $item_id)) {
            $successMessage = "Varan har tagits bort!";
        } else {
            $errorMessage = "Ett fel uppstod när varan skulle tas bort.";
        }
    } elseif (isset($_POST['record_purchase'])) {
        $item_id = $_POST["item_id"];
        if (recordPurchase($item_id)) {
            $successMessage = "Inköpet har registrerats!";
        } else {
            $errorMessage = "Ett fel uppstod när inköpet skulle registreras.";
        }
    } elseif (isset($_POST['discontinue'])) {
        $item_id = $_POST["item_id"];
        if (markItemAsDiscontinued($user_id, $item_id)) {
            $successMessage = "Varan har markerats som utgången!";
        } else {
            $errorMessage = "Ett fel uppstod när varan skulle markeras som utgången.";
        }
    } elseif (isset($_POST['restore'])) {
        $item_id = $_POST["item_id"];
        if (restoreDiscontinuedItem($user_id, $item_id)) {
            $successMessage = "Varan har återställts!";
        } else {
            $errorMessage = "Ett fel uppstod när varan skulle återställas.";
        }
    }
}

// Hämta alla varor för användaren
$items = getAllItemsForUser($user_id);
?>

<!DOCTYPE html>
<html lang="sv">
<head>
    <title>Hantera Varor</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" crossorigin="anonymous" />
    <style>
        .card { margin-top: 20px; }
        .alert { margin-top: 10px; }
        .btn { margin-right: 5px; }
        .list-group-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 1.25rem;
        }
        .info-icon {
            font-size: 1rem;
            color: #17a2b8;
            cursor: pointer;
            margin-left: 5px;
        }
        .item-details {
            margin-top: 5px;
            font-size: 0.9rem;
            color: #6c757d;
        }
        .purchase-history {
            margin-top: 10px;
            font-size: 0.85rem;
            color: #6c757d;
            border-left: 3px solid #17a2b8;
            padding-left: 10px;
            display: none;
        }
        .purchase-dates {
            margin-top: 5px;
        }
        .badge-interval {
            background-color: #28a745;
            color: white;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2 class="mt-4">Hantera dina varor</h2>
        
        <?php if (!empty($errorMessage)): ?>
            <div class="alert alert-danger"><?php echo htmlspecialchars($errorMessage); ?></div>
        <?php endif; ?>
        
        <?php if (!empty($successMessage)): ?>
            <div class="alert alert-success"><?php echo htmlspecialchars($successMessage); ?></div>
        <?php endif; ?>
        
        <div class="card">
            <div class="card-header">
                <h5>Lägg till ny vara</h5>
            </div>
            <div class="card-body">
                <form method="post" class="form-row">
                    <div class="col-md-8 mb-3">
                        <input type="text" name="item_name" class="form-control" placeholder="Namn på vara" required>
                    </div>
                    <div class="col-md-4 mb-3">
                        <button type="submit" name="add" class="btn btn-primary">Lägg till vara</button>
                        <span class="info-icon" data-toggle="tooltip" title="Förbrukningsintervallet beräknas automatiskt baserat på dina inköpsmönster">?</span>
                    </div>
                </form>
            </div>
        </div>
        
        <div class="card mt-4">
            <div class="card-header">
                <h5>Dina varor</h5>
                <small class="text-muted">Förbrukningsintervall beräknas automatiskt baserat på dina inköpsmönster</small>
            </div>
            <div class="card-body">
                <?php if (empty($items)): ?>
                    <div class="alert alert-info">Du har inga varor i din databas. Lägg till varor ovan!</div>
                <?php else: ?>
                    <ul class="list-group">
                        <?php foreach ($items as $item): ?>
                            <li class="list-group-item">
                                <div class="item-container">
                                    <div>
                                        <strong><?php echo htmlspecialchars($item['item_name']); ?></strong>
                                        <?php if ($item['discontinued']): ?>
                                            <span class="badge badge-danger ml-2">Utgången</span>
                                        <?php endif; ?>
                                        <div class="item-details">
                                            <?php if ($item['avg_interval']): ?>
                                                <span class="badge badge-interval">Beräknat förbrukningsintervall: <?php echo htmlspecialchars($item['avg_interval']); ?> dagar</span>
                                            <?php elseif ($item['purchase_count'] == 1): ?>
                                                <span class="badge badge-secondary">Köpt endast en gång - kan inte beräkna förbrukningsintervall än</span>
                                            <?php else: ?>
                                                <span class="badge badge-secondary">Aldrig köpt - inget förbrukningsintervall</span>
                                            <?php endif; ?>
                                            
                                            <?php if ($item['last_purchase']): ?>
                                                <br>Senast köpt: <?php echo htmlspecialchars($item['last_purchase']); ?>
                                            <?php else: ?>
                                                <br>Aldrig köpt tidigare
                                            <?php endif; ?>
                                        </div>
                                        
                                        <?php if (!empty($item['purchase_dates'])): ?>
                                            <a href="#" class="toggle-history" data-item-id="<?php echo $item['item_id']; ?>">Visa/dölj inköpshistorik</a>
                                            <div class="purchase-history" id="history-<?php echo $item['item_id']; ?>">
                                                <div>Inköpsdatum (<?php echo count($item['purchase_dates']); ?> st):</div>
                                                <div class="purchase-dates">
                                                    <?php echo implode(', ', array_map(function($date) { 
                                                        return date('Y-m-d', strtotime($date)); 
                                                    }, $item['purchase_dates'])); ?>
                                                </div>
                                                
                                                <?php if (!empty($item['intervals'])): ?>
                                                    <div class="mt-2">Intervall mellan inköp (dagar):</div>
                                                    <div><?php echo implode(', ', $item['intervals']); ?></div>
                                                <?php endif; ?>
                                            </div>
                                        <?php endif; ?>
                                    </div>
                                    <div>
                                        <form method="post" style="display:inline;">
                                            <input type="hidden" name="item_id" value="<?php echo $item['item_id']; ?>">
                                            <button type="submit" name="record_purchase" class="btn btn-success btn-sm">Registrera inköp</button>
                                        </form>
                                        <form method="post" style="display:inline;">
                                            <input type="hidden" name="item_id" value="<?php echo $item['item_id']; ?>">
                                            <button type="submit" name="delete" class="btn btn-danger btn-sm" onclick="return confirm('Är du säker på att du vill ta bort denna vara?')">Ta bort</button>
                                        </form>
                                        <?php if (!$item['discontinued']): ?>
                                            <form method="post" style="display:inline;">
                                                <input type="hidden" name="item_id" value="<?php echo $item['item_id']; ?>">
                                                <button type="submit" name="discontinue" class="btn btn-warning btn-sm">Markera som utgången</button>
                                            </form>
                                        <?php else: ?>
                                            <form method="post" style="display:inline;">
                                                <input type="hidden" name="item_id" value="<?php echo $item['item_id']; ?>">
                                                <button type="submit" name="restore" class="btn btn-info btn-sm">Återställ</button>
                                            </form>
                                        <?php endif; ?>
                                    </div>
                                </div>
                            </li>
                        <?php endforeach; ?>
                    </ul>
                <?php endif; ?>
            </div>
        </div>
        
        <div class="mt-4">
            <a href="menu.php" class="btn btn-secondary">Tillbaka till menyn</a>
            <a href="logout.php" class="btn btn-warning float-right">Logga ut</a>
        </div>
    </div>
    
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
            
            // Toggle purchase history visibility
            $('.toggle-history').click(function(e) {
                e.preventDefault();
                const itemId = $(this).data('item-id');
                $('#history-' + itemId).toggle();
            });
        });
    </script>
</body>
</html>

